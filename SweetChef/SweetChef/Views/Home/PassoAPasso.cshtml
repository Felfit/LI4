<style>
    @@media (min-width: 1200px) {
        body {
            height: 100vh !important;
        }

        .container {
            height: 100% !important;
            margin-top: 0 !important;
            margin-bottom: 0 !important;
            overflow-y: hidden;
        }
    }

    #passoContainer {
        height: calc(100% - 6em);
    }

    .vertical-scroll {
        overflow-x: hidden;
        overflow-y: auto;
    }

        .vertical-scroll::-webkit-scrollbar {
            width: 5px;
            height: 5px;
        }

        .vertical-scroll::-webkit-scrollbar-button {
            width: 0px;
            height: 0px;
        }

        .vertical-scroll::-webkit-scrollbar-thumb {
            background: #e1e1e1;
            border: 0px none #000;
            border-radius: 50px;
        }

            .vertical-scroll::-webkit-scrollbar-thumb:hover {
                background: #666;
            }

            .vertical-scroll::-webkit-scrollbar-thumb:active {
                background: #666;
            }

        .vertical-scroll::-webkit-scrollbar-track {
            background: transparent;
            border: 0px none #000;
            border-radius: 50px;
        }

            .vertical-scroll::-webkit-scrollbar-track:hover {
                background: transparent;
            }

            .vertical-scroll::-webkit-scrollbar-track:active {
                background: #ddd;
            }

        .vertical-scroll::-webkit-scrollbar-corner {
            background: transparent;
        }

    .progress-dots {
        position: absolute;
        margin-top: -0.625em;
        margin-left: -0.625em;
        z-index: 1;
        height: 2.5em;
        width: 2.5em;
        border-radius: 50%;
        text-align: center;
        vertical-align: middle;
        line-height: 2.25em;
        color: white;
    }

    .collapse-header, .modal-li > li {
        cursor: pointer;
    }

    footer {
        display: none;
    }

    .list-group-item.active a {
        color: white;
    }
</style>

<script>
    class Receita {
        constructor(receita, tempo, data, ultimoPasso) {
            this.info = receita.info;
            this.ingredientes = receita.ingredientes;
            this.utensilios = receita.utensilios;
            this.passos = receita.passos;
            this.numPassos = receita.passos.length;
            this.passoAtualIndice = ultimoPasso ? this.numPassos - 1 : 0;
            this.passoAtual = this.passos[this.passoAtualIndice];
            this.tempo = tempo === undefined ? Date.now() : Date.now() - tempo;
            this.data = data === undefined ? new Date().toISOString() : data;
        }

        continuar() {
            this.passoAtualIndice = (this.passoAtualIndice + 1).clamp(-1, this.numPassos);
            if (this.passoAtualIndice < this.numPassos) {
                this.passoAtual = this.passos[this.passoAtualIndice];
            }
        }

        retroceder() {
            this.passoAtualIndice = (this.passoAtualIndice - 1).clamp(-1, this.numPassos);
            if (this.passoAtualIndice < this.numPassos) {
                this.passoAtual = this.passos[this.passoAtualIndice];
            }
        }
    }

    function inicializarProgressBar() {
        if (receita == null) throw "Receita não definida";
        for (let i = 0; i <= receita.numPassos; i++) {
            $("<div class='progress-dots'></div>")
                .attr("style", `left: calc(${100 * (i / receita.numPassos)}% - ${3 * (i / receita.numPassos)}em)`)
                .html(i < receita.numPassos ? (i + 1) : "<i class='fas fa-flag-checkered'></i>")
                .appendTo("#progresso-do-cozinhado");
        }
        atualizaProgressBar(0);
    }

    function atualizaProgressBar(tempo) {
        if (receita == null) throw "Receita não definida";
        let classes = ["bg-success", "bg-secondary", "bg-primary"]
        for (let i = 0; i <= receita.numPassos; i++) {
            let elem = $(".progress-dots").eq(i).delay(i == receita.passoAtualIndice ? tempo : 0).queue(function (next) {
                if (i < receita.passoAtualIndice || receita.passoAtualIndice == receita.numPassos) {
                    $(this).removeClass(classes).addClass("bg-success");
                } else if (i > receita.passoAtualIndice) {
                    $(this).removeClass(classes).addClass("bg-secondary");
                } else {
                    $(this).removeClass(classes).addClass("bg-primary");
                }
                next();
            });
        }
        $("#progresso-do-cozinhado-barra-realizado").css(
            {
                "width": `${100 * (receita.passoAtualIndice / receita.numPassos)}%`,
            });
        $("#progresso-do-cozinhado-barra-atual").css(
            {
                "width": `${receita.passoAtualIndice >= receita.numPassos || receita.passo <= 0 ? 0 : 100 / receita.numPassos}%`,
            });
    }

    function destacarUsados(passoAtual) {
        classDestaque = "active";
        $("#ingredientes li").removeClass(classDestaque);
        $("#utensilios li").removeClass(classDestaque);
        for (const { id } of passoAtual.ingredientes) {
            $(`#ingredientes li[data-id=${id}]`).addClass(classDestaque);
        }
        for (const { id } of passoAtual.utensilios) {
            $(`#utensilios li[data-id=${id}]`).addClass(classDestaque);
        }
    }

    Number.prototype.clamp = function (min, max) {
        return this <= min ? min : this >= max ? max : this;
    };

    Location.prototype.arguments = function () {
        return Object.fromEntries((this.href.split("?")[1] || "").split("&").map(v => v.split("=")));
    };

    function inicializarPagina() {
        $("#nomeReceita").text(receita.info.nome);
        for (const utensilio of receita.utensilios) {
            $(`<li class="list-group-item px-2 py-1" data-toggle="modal" data-target="#produto" data-id="${utensilio.id}" data-tipo="utensilio" data-nome="${utensilio.nome}"></li>`)
                .append($('<a href="#produto"></a>').text(utensilio.nome))
                .appendTo("#utensilios");
        }
        for (const ingrediente of receita.ingredientes) {
            $(`<li class="list-group-item px-2 py-1" data-toggle="modal" data-target="#produto" data-id="${ingrediente.id}" data-tipo="ingrediente" data-nome="${ingrediente.nome}"></li>`)
                .append($('<a href="#produto"></a>').text(ingrediente.nome))
                .append($("<small></small>").text(" " + ingrediente.quantidade + " " + ingrediente.unidade))
                .appendTo("#ingredientes");
        }
        $("[data-target='#produto']").on("click", function () {
            showProduto($(this).data("id"), $(this).data("nome"), $(this).data("tipo"));
        });
        inicializarPasso();
    }

    function showProduto(id, nome, tipo) {
            $("#produtoTitle").text(nome);
            $("#produtoIframe").css("opacity","0").attr("src", `/Home/${tipo}/${id}`).on("load", function () {
                $(this).css("opacity", "1");
            });
        }

    function inicializarPasso() {
        if (receita.passoAtualIndice == receita.numPassos) {
            location.href = `@Url.Action("Feedback", "Home", new { id = ViewData["ReceitaId"] })?tempo=${Date.now() - receita.tempo}&data=${receita.data}`;
            return;
        }
        if (receita.passoAtualIndice == -1) {
            location.href = "@Url.Action("Receita", "Home", new { id = ViewData["ReceitaId"] })";
            return;
        }

        destacarUsados(receita.passoAtual);

        $("#passoDescricao").text(receita.passoAtual.info.descricao);
        if (receita.passoAtual.info.imagemLink || receita.passoAtual.info.videoLink) {
            $("#passoMedia").show();
            if (receita.passoAtual.info.imagemLink && receita.passoAtual.info.videoLink) {
                $("#passoCarouselControls").show();
            } else {
                $("#passoCarouselControls").hide();
            }
            if (receita.passoAtual.info.imagemLink) {
                $("#passoImagem").attr("src", receita.passoAtual.info.imagemLink);
                $("#passoImagemItem").addClass("active");
                $("#passoVideoItem").removeClass("active");
            } else {
                $("#passoImagemItem").removeClass("active");
                $("#passoImage").hide();
            }
            if (receita.passoAtual.info.videoLink) {
                $("#passoVideo").attr("src", receita.passoAtual.info.videoLink);
                if (receita.passoAtual.info.imagemLink) {
                    $("#passoCarouselControls").show();
                } else {
                    $("#passoImagemItem").removeClass("active");
                    $("#passoVideoItem").addClass("active");
                    $("#passoCarouselControls").hide();
                }
            } else {
                $("#passoVideo").hide();
                $("#passoCarouselControls").hide();
            }
        } else {
            $("#passoMedia").hide();
        }
        $("#ajudas").html("");
        let passo = receita.passoAtualIndice + 1;
        $.getJSON(`/api/duvida/@ViewData["ReceitaId"]/${passo}`, (duvidas) => {
            if (passo != receita.passoAtualIndice + 1) return;
            let indiceDuvida = 0;
            for (const duvida of duvidas) {
                $('<li class="list-group-item px-2 py-1"></li>')
                    .append(
                        $(`<a href="#ajudaModel" data-toggle="modal" data-target="#ajudaModel" onclick="atualizarDuvida(${indiceDuvida})"></a>`)
                            .text(duvida.questao))
                    .appendTo("#ajudas");
                indiceDuvida++;
            }
            receita.passoAtual.ajudas = duvidas.map(k => k["dúvida"]);
        }).fail((err) => {
            alert("Não foi possível obter a dúvida");
        });;
    }

    function atualizarDuvida(indice) {
        const ajuda = receita.passoAtual.ajudas[indice];
        $("#ajudaTitulo").text(ajuda.titulo);
        $("#ajudaExplicacao").text(ajuda.explicacao);
        if (ajuda.imagemLink || ajuda.videoLink) {
            $("#ajudaMedia").show();
            if (ajuda.imagemLink && ajuda.videoLink) {
                $("#ajudaCarouselControls").show();
            } else {
                $("#ajudaCarouselControls").hide();
            }
            if (ajuda.imagemLink) {
                $("#ajudaImagem").attr("src", ajuda.imagemLink);
                $("#ajudaImagemItem").addClass("active");
                $("#ajudaVideoItem").removeClass("active");
            } else {
                $("#ajudaImagemItem").removeClass("active");
                $("#ajudaImage").hide();
            }
            if (ajuda.videoLink) {
                $("#ajudaVideo").attr("src", ajuda.videoLink);
                if (ajuda.imagemLink) {
                    $("#ajudaCarouselControls").show();
                } else {
                    $("#ajudaImagemItem").removeClass("active");
                    $("#ajudaVideoItem").addClass("active");
                    $("#ajudaCarouselControls").hide();
                }
            } else {
                $("#ajudaVideo").hide();
                $("#ajudaCarouselControls").hide();
            }
        } else {
            $("#ajudaMedia").hide();
        }
        if (ajuda.linkexterno) {
            $("#ajudaLinkExterno").attr("href", ajuda.linkexterno).show();
        } else {
            $("#ajudaLinkExterno").hide();
        }
    }

    function trocarConteudo() {
        $("#conteudoPlaceholder").hide();
        $("#conteudo").show();
    }

    $(function () {
        $.getJSON("/api/Receita/@ViewData["ReceitaId"]", (data) => {
            let args = location.arguments();
            window.receita = new Receita(data, args["tempo"], args["data"], args["ultimoPasso"]);
            inicializarPagina();
            inicializarProgressBar();
            trocarConteudo();
        }).fail((err) => {
            alert("Não foi possível obter a receita");
            history.back();
        });
        // Controlo do passo
        $("#continuar").click(() => { receita.continuar(); inicializarPasso(); atualizaProgressBar(400); });
        $("#retroceder").click(() => { receita.retroceder(); inicializarPasso(); atualizaProgressBar(400); });
        // Comentário
        $("#comentario").click(() => {
            let target = `/api/Utilizador/passoFeedback/@ViewData["ReceitaId"]/${receita.passoAtualIndice + 1}/`;
            $.getJSON(target, (data) => {
                $("#passoComentario").val(data.comentario);
            }).fail(() => {
                $("#passoComentario").val("");
            });
            $("#comentarioForm").attr("target", target);
        });
        $("#guardarComentario").click(() => {
            $.ajax({
                url: `/api/Utilizador/passoFeedback/@ViewData["ReceitaId"]/${receita.passoAtualIndice + 1}/?comentario=${$("#passoComentario").val()}`,
                type: 'PUT',
            }).fail(() => alert("Não foi possível guardar o comentário"));
        });
        //Collapse
        if ($(window).width() >= 1200) {
            $(".collapse-header").each((_, elem) => $($(elem).data("target")).addClass("show"));
        }
    });
</script>

<div id="conteudoPlaceholder" class="h-100">
    <h1 class="m-auto d-table">A carregar a receita...</h1>
</div>
<div class="h-100" id="conteudo" style="display: none">
    <h1 id="nomeReceita">@ViewData["ReceitaNome"]</h1>
    <div class="row" id="passoContainer">
        <div class="col-xl-6 order-xl-2 h-100 vertical-scroll">
            <!--src = receita.passoAtual.info.imagemLink-->
            <div id="passoMedia" style="height:20em" class="carousel slide mb-2" data-ride="carousel" data-interval="0">
                <div class="carousel-inner h-100">
                    <div class="carousel-item active" id="passoImagemItem">
                        <img class="img-fluid rounded mx-auto d-block" id="passoImagem" />
                    </div>
                    <div class="carousel-item" id="passoVideoItem">
                        <video id="passoVideo" class="rounded" style="width: 100%;" allowfullscreen controls></video>
                    </div>
                </div>
                <div id="passoCarouselControls">
                    <a class="carousel-control-prev" href="#passoMedia" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#passoMedia" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
            <p id="passoDescricao">
                <!--receita.passoAtual.info.descricao-->
            </p>
        </div>
        <div class="col-xl-3 order-xl-3 h-100">
            <div class="row flex-column mx-0 h-100">
                <div class="h-25 py-2 order-xl-1">
                    <div class="row no-gutters">
                        <div class="col-4 col-xl-6 order-xl-0">
                            <button type="button" class="btn btn-primary d-block mx-auto" id="retroceder"><i class='fas fa-arrow-left'></i><span class="d-none d-sm-inline-block">&nbsp;Retroceder</span></button>
                        </div>
                        <div class="col order-xl-2 pt-xl-1">
                            <button type="button" class="btn btn-danger d-block mx-auto" id="microfone"><i class='fas fa-microphone-slash'></i></button>
                            <script>
                                $(() => {
                                    var recognitionActive = false;
                                    var utterActive = true;
                                    try {
                                        var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;
                                        var recognition = new SpeechRecognition();
                                        var voice = speechSynthesis.getVoices().find(k => k.lang.slice(0, 2) == "pt");
                                        recognition.lang = 'pt-PT';
                                        recognition.interimResults = false;
                                        recognition.maxAlternatives = 1;
                                        $("#microfone").click(function () {
                                            try {
                                                if (recognitionActive = !recognitionActive) {
                                                    recognition.start();
                                                }
                                            } catch (e) {
                                                console.log(e);
                                            } finally {
                                                $(this)
                                                    .toggleClass("btn-danger")
                                                    .toggleClass("btn-success")
                                                    .children("i")
                                                    .toggleClass("fa-microphone-slash")
                                                    .toggleClass("fa-microphone");
                                            }
                                        });
                                        $("#audio").click(function () {
                                            utterActive = !utterActive;
                                            $(this)
                                                .toggleClass("btn-danger")
                                                .toggleClass("btn-success")
                                                .children("i")
                                                .toggleClass("fa-volume-up")
                                                .toggleClass("fa-volume-mute");
                                            recognition.start();
                                        });
                                        recognition.onresult = (event) => {
                                            var last = event.results.length - 1;
                                            var comando = event.results[last][0].transcript.toLowerCase();
                                            var mensagem = "";
                                            if (["repetir", "não percebi nada", "passo", "o que é para fazer"].indexOf(comando) > -1) {
                                                mensagem = $("#passoDescricao").text();
                                            } else if (["continuar", "próximo", "seguinte"].indexOf(comando) > -1) {
                                                receita.continuar();
                                                inicializarPasso();
                                                atualizaProgressBar(400);
                                            } else if (["retroceder", "voltar"].indexOf(comando) > -1) {
                                                receita.retroceder();
                                                inicializarPasso();
                                                atualizaProgressBar(400);
                                            } else if (["último passo", "terminar"].indexOf(comando) > -1) {
                                                alert("Acabar");
                                            } else if (["início", "voltar à receita", "voltar a receita"].indexOf(comando) > -1) {
                                                alert("início");
                                            } else if (["comentário", "comentários", "nota", "notas"].indexOf(comando) > -1) {
                                                alert("abrir comentários");
                                            } else if (["ingrediente", "ingredientes"].indexOf(comando) > -1) {
                                                mensagem = "Ingredientes: ";
                                                for (ingrediente of $("#ingredientes > li")) {
                                                    mensagem += $(ingrediente).text() + "\n";
                                                }
                                            } else if (["utensílio", "utensílios"].indexOf(comando) > -1) {
                                                mensagem = "Utensílios: ";
                                                for (utensilio of $("#utensilios > li")) {
                                                    mensagem += $(utensilio).text() + "\n";
                                                }
                                            } else if (["ajuda", "ajudas"].indexOf(comando) > -1) {
                                                mensagem = "Ajudas: ";
                                                for (ajuda of $("#ajudas > li")) {
                                                    mensagem += $(ajuda).text() + "\n";
                                                }
                                            } else if (new Array($("#ingredientes > li")).map(k => k.clone().children().remove().end().text().toLowerCase()).indexOf(comando) > -1) {
                                                $("#produto").modal("show");
                                                showProduto($(`#ingredientes>li[data-nome=${comando}]`).data("id"), comando, "ingrediente");
                                                mensagem = "Ingrediente: " + comando;
                                            } else if (new Array($("#utensilios > li")).map(k => k.clone().children().remove().end().text().toLowerCase()).indexOf(comando) > -1) {
                                                $("#produto").modal("show");
                                                showProduto($(`#utensilios>li[data-nome=${comando}]`).data("id"), comando, "utensilio");
                                                mensagem = "Utensílio: " + comando;
                                            } else if (new Array($("#ajudas > li")).map(k => k.clone().children().remove().end().text().toLowerCase()).indexOf(comando) > -1) {
                                                alert("Abrir ajudas " + comando);
                                                mensagem = "Ajudas: " + comando;
                                            }
                                            console.log(comando);
                                            if (utterActive) {
                                                var utter = new SpeechSynthesisUtterance(mensagem);
                                                utter.voice = voice;
                                                speechSynthesis.speak(utter);
                                            }
                                            console.log('Confidence: ' + event.results[0][0].confidence);
                                        }
                                        recognition.onend = function () {
                                            if (recognitionActive) {
                                                recognition.start();
                                            }
                                        };
                                    } catch (e) {
                                        console.log(e);
                                        $("#microfone").hide();
                                    }
                                });
                            </script>
                        </div>
                        <div class="col order-xl-2 pt-xl-1">
                            <button type="button" class="btn btn-success d-block mx-auto" id="audio"><i class='fas fa-volume-up'></i></button>
                        </div>
                        <div class="col order-xl-2 pt-xl-1">
                            <button data-toggle="modal" data-target="#comentarioModel" class="btn btn-warning d-block mx-auto" id="comentario"><i class="far fa-sticky-note"></i></button>
                        </div>
                        <div class="col order-xl-2 pt-xl-1">
                            <button data-toggle="modal" data-target="#temporizadorModel"  type="button" class="btn btn-primary d-block mx-auto" id="temporizador"><i class="fas fa-hourglass-start"></i></button>
                        </div>
                        <div class="col-4 col-xl-6 order-xl-1">
                            <button type="button" class="btn btn-primary d-block mx-auto" id="continuar"><span class="d-none d-sm-inline-block">Continuar&nbsp;</span><i class='fas fa-arrow-right'></i></button>
                        </div>
                    </div>
                </div>
                <div class="h-75 vertical-scroll order-xl-0">
                    <h4 data-toggle="collapse" data-target="#ajudas" class="collapse-header">Ajudas</h4>
                    <ul id="ajudas" class="list-group list-group-flush mb-1 collapse modal-li"></ul>
                </div>
            </div>
        </div>
        <div class="col-xl-3 order-xl-1 h-100 vertical-scroll">
            <h4 data-toggle="collapse" data-target="#ingredientes" class="collapse-header">Ingredientes</h4>
            <ul id="ingredientes" class="list-group list-group-flush mb-1 collapse modal-li"></ul>
            <h4 data-toggle="collapse" data-target="#utensilios" class="collapse-header">Utensílios</h4>
            <ul id="utensilios" class="list-group list-group-flush mb-1 collapse modal-li"></ul>
        </div>
    </div>

    <div class="row my-2">
        <div class="col my-3 mx-5">
            <div class="progress" id="progresso-do-cozinhado">
                <div class="progress-bar progress-bar-success bg-success" id="progresso-do-cozinhado-barra-realizado"></div>
                <div class="progress-bar progress-bar-striped progress-bar-animated" id="progresso-do-cozinhado-barra-atual"></div>
            </div>
        </div>
    </div>

    <!-- Ajudas -->
    <div class="modal fade" id="ajudaModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ajudaTitulo"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="ajudaMedia" style="height:335px" class="carousel slide mb-2" data-ride="carousel" data-interval="0">
                        <div class="carousel-inner">
                            <div class="carousel-item active" id="ajudaImagemItem">
                                <img class="img-fluid rounded mx-auto d-block" id="ajudaImagem" />
                            </div>
                            <div class="carousel-item embed-responsive embed-responsive-16by9" id="ajudaVideoItem">
                                <video id="ajudaVideo" class="rounded embed-responsive-item" allowfullscreen controls></video>
                            </div>
                        </div>
                        <div id="ajudaCarouselControls">
                            <a class="carousel-control-prev" href="#ajudaMedia" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#ajudaMedia" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>
                    </div>
                    <p id="ajudaExplicacao"></p>
                </div>
                <div class="modal-footer">
                    <a href="" id="ajudaLinkExterno" target="_blank" class="btn btn-warning">Mais informações</a>
                    <button type="button" class="btn btn-success" data-dismiss="modal">Entendi</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Comentario -->
    <div class="modal fade" id="comentarioModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Comentário sobre o passo</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body form-group">
                    <textarea id="passoComentario" class="form-control" rows="5"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="descartarComentario">Descartar</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal" id="guardarComentario">Guardar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Produto -->
    <div class="modal fade" id="produto" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered mw-100 w-75" role="document">
            <div class="modal-content" style="height: 75vh">
                <div class="modal-header">
                    <h5 class="modal-title" id="produtoTitle"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <iframe id="produtoIframe" class="embed-responsive h-100" frameborder="0"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Temporizador -->
<div class="modal fade" id="temporizadorModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <script>
        $(() => {
            let targetTime;
            $("#temporizadorComecar").click(() => {
                if (targetTime !== undefined) {
                    targetTime = undefined;
                    $("#temporizadorComecar")
                        .removeClass("btn-danger")
                        .addClass("btn-primary")
                        .text("Começar");
                    $("#temporizadorTempo").prop("readonly", false).val("");
                    return;
                }
                $("#temporizadorComecar")
                        .removeClass("btn-primary")
                        .addClass("btn-danger")
                        .text("Cancelar");
                let tempoVal = $("#temporizadorTempo").prop("readonly", true).val();
                let tempo = Number(tempoVal) * 60; // converte para segundos
                tempo *= 1000; // converte para milisegundos

                targetTime = Date.now() + tempo;
                setTimeout(function f() {
                    console.log(targetTime);
                    if (targetTime === undefined) return;
                    let tempoEmFalta = Math.floor((targetTime - Date.now()) / 1000 / 60); // converte para minutos
                    if (tempoEmFalta > 0) {
                        $("#temporizadorTempo").val(tempoEmFalta);
                        setTimeout(f, 1000);
                    } else {
                        $("#temporizadorTempo").prop("readonly", false).val("");
                        $("#temporizadorComecar")
                            .removeClass("btn-danger")
                            .addClass("btn-primary")
                            .text("Começar");
                        targetTime = undefined;
                        $("#temporizadorAlarm")[0].play().then(() => {
                            setTimeout(() => {
                                $("#temporizadorTempo").prop("readonly", false).val("");
                                alert("Acabou o tempo!");
                                $("#temporizadorAlarm")[0].pause();
                                $("#temporizadorAlarm")[0].currentTime = 0;
                            }, 0);
                        });
                    }
                }, 60 * 1000);
            });
        });
    </script>
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Temporizador</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <audio src="~/audio/analog-watch-alarm_daniel-simion.mp3" id="temporizadorAlarm" preload="auto"></audio>
            <div class="modal-body form-group row">
                <input id="temporizadorTempo" class="form-control col text-center" type="number" step="1" />
                <label for="temporizadorTempo" class="col-2 col-form-label">minutos</label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="temporizadorComecar">Começar</button>
            </div>
        </div>
    </div>
</div>